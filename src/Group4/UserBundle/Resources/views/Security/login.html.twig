{% extends "FOSUserBundle::layout.html.twig" %}

{% trans_default_domain 'FOSUserBundle' %}

{% block navbar %}
{% endblock %}

{% block content %}
    {% block fos_user_content %}
        {% if error %}
            <div>{{ error|trans }}</div>
        {% endif %}
    <div class="row" style="margin-top:20px">
        <div class="col-xs-12 col-sm-8 col-md-6 col-sm-offset-2 col-md-offset-3">
            <form role="form" class="form-signin" action="{{ path("fos_user_security_check") }}" method="post">
                <h2>Please Sign In</h2>
                <hr class="colorgraph">
                <input type="hidden" name="_csrf_token" value="{{ csrf_token }}"/>
                <div class="form-group">
                    <input placeholder="{{ 'security.login.username'|trans }}" class="form-control input-lg" type="text" id="username" name="_username" value="{{ last_username }}" required="required"/>
                </div>
                <div class="form-group">
                    <input placeholder="{{ 'security.login.password'|trans }}" class="form-control input-lg" type="password" id="password" name="_password" required="required"/>
                </div>
                {#<label class="checkbox pull-left">#}
                    {#<input type="checkbox" id="remember_me" name="_remember_me" value="on"/>#}
                    {#{{ 'security.login.remember_me'|trans }}#}
                {#</label>#}
                <span class="button-checkbox">
                <button type="button" class="btn" data-color="info">Remember Me</button>
                    <input type="checkbox" name="_remember_me" id="remember_me" checked="checked" class="hidden">
                    <a href="{{ path("fos_user_resetting_request") }}" class="btn btn-link pull-right">Forgot Password?</a>
                </span>
                <span class="clearfix"></span>
                <hr class="colorgraph">
                <div class="row">

                    <div class="col-xs-6 col-sm-6 col-md-6">
                        <input class="btn btn-lg btn-primary btn-block btn-success" type="submit" id="_submit" name="_submit" value="{{ 'security.login.submit'|trans }}"/>
                    </div>
                    <div class="col-xs-6 col-sm-6 col-md-6">
                        <a class="btn btn-lg btn-primary btn-block" href="{{ path("fos_user_registration_register") }}">Sign up</a>
                    </div>

                </div>

            </form>
        </div>
    </div>
        <script>
            $(function(){
                $('.button-checkbox').each(function(){
                    var $widget = $(this),
                            $button = $widget.find('button'),
                            $checkbox = $widget.find('input:checkbox'),
                            color = $button.data('color'),
                            settings = {
                                on: {
                                    icon: 'glyphicon glyphicon-check'
                                },
                                off: {
                                    icon: 'glyphicon glyphicon-unchecked'
                                }
                            };

                    $button.on('click', function () {
                        $checkbox.prop('checked', !$checkbox.is(':checked'));
                        $checkbox.triggerHandler('change');
                        updateDisplay();
                    });

                    $checkbox.on('change', function () {
                        updateDisplay();
                    });

                    function updateDisplay() {
                        var isChecked = $checkbox.is(':checked');
                        // Set the button's state
                        $button.data('state', (isChecked) ? "on" : "off");

                        // Set the button's icon
                        $button.find('.state-icon')
                                .removeClass()
                                .addClass('state-icon ' + settings[$button.data('state')].icon);

                        // Update the button's color
                        if (isChecked) {
                            $button
                                    .removeClass('btn-default')
                                    .addClass('btn-' + color + ' active');
                        }
                        else
                        {
                            $button
                                    .removeClass('btn-' + color + ' active')
                                    .addClass('btn-default');
                        }
                    }
                    function init() {
                        updateDisplay();
                        // Inject the icon if applicable
                        if ($button.find('.state-icon').length == 0) {
                            $button.prepend('<i class="state-icon ' + settings[$button.data('state')].icon + '"></i> ');
                        }
                    }
                    init();
                });
            });
        </script>
    {% endblock fos_user_content %}
{% endblock %}
